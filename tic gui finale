package tictactoeGUI;

import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Event;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.EventObject;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;

public class GUITicTacToe implements ActionListener{ 
	
	JFrame frame = new JFrame();
	JButton[][] button = new JButton[3][3];
	int[][] board = new int [3][3];
	final int XTURN = 0;
	final int OTURN = 1;
	final int BLANK = 0;
	final int XMOVE = 1;
	final int OMOVE = 2;
	int Xwin = 0;
	int Owin = 0;
	int turn = XTURN;
	Container center = new Container();
	JLabel xname = new JLabel("X wins: " +Xwin);
	JLabel oname = new JLabel("O wins: " +Owin);
	JButton oChangeName = new JButton("Change name (X)");
	JButton xChangeName = new JButton("Change name (O)");
	JLabel status = new JLabel (" ");
	JTextField xChangeField = new JTextField();
	JTextField oChangeField = new JTextField();
	Container north = new Container();
	Container south = new Container();
	String Xname = "X";
	String Oname = "O";
	
	boolean playing = true;
	
	public GUITicTacToe(){

		frame.setSize(400, 400);
		frame.setLayout(new BorderLayout());
		center.setLayout(new GridLayout(3,2));
		for (int i = 0; i < button.length; i++) {
			for (int j = 0; j < button.length; j++) {
				button[j][i] = new JButton(j+","+i);
				center.add(button[j][i]);
				button[j][i].addActionListener(this);
				
			}
		}
		frame.add(center, BorderLayout.CENTER);
		
		north.setLayout(new GridLayout(3,2));
		south.setLayout(new GridLayout(3,2));
		north.add(xname);
		north.add(oname);
		north.add(oChangeName);
		xChangeName.addActionListener(this);
		north.add(xChangeName);
		oChangeName.addActionListener(this);
		north.add(xChangeField);
		north.add(oChangeField);
		frame.add(north, BorderLayout.NORTH);
		frame.add(south, BorderLayout.SOUTH);
		
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setVisible(true);
		
		
	}

	public static void main(String[] args) {
		new GUITicTacToe();

	}
	boolean checkWin (int player){
		if (board[0][0] == player && 
				board [1][1] == player && 
				board [2][2] == player){
			return true;
		}
		if (board[2][0] == player && 
				board [1][1] == player && 
				board [0][2] == player){
			return true;
		}
		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board.length; j++) {
				if (board [i][j] == player && 
				board [i+1][j] == player &&
				board [i+2][j] == player){
					return true;
				}
				if (board [i][j] == player && 
					board [i][j+1] == player &&
					board [i][j+2] == player){
					return true;
				}
			}
		}
		return false;
	}
	
	public void clearBoard() {
		for (int a = 0; a < board.length; a++) {
			for (int b = 0; b < board.length; b++) {
				board[a][b]=BLANK;
				button[a][b].setText("");;
				
			}
		}
		turn = XTURN;
	}
	
	@Override
	public void actionPerformed(ActionEvent event) {
		JButton current;
		boolean gridButton = false;
		for (int i = 0; i < button.length; i++) {
			for (int j = 0; j < board.length; j++) {
				if (event.getSource().equals(button[j][i])){
					gridButton = true;
					current = button [j][i];
					if(turn == XTURN){
						current.setText("X");
						board [j][i] = XMOVE;
						turn = OTURN;
					}
					else if (turn == OTURN){
						current.setText("O");
						board [j][i] = OMOVE;
						turn = XTURN;
					}
					if (checkWin(XMOVE) == true){
						Xwin += 1;
						xname.setText(Xname + " wins: "+ Xwin);
						clearBoard();
						}
					if (checkWin(OMOVE) == true){
						Owin += 1;
						oname.setText(Oname + " wins: "+ Owin);
						clearBoard();
						}
				}
			}
			
		}
		if (gridButton == false){
			if (event.getSource().equals(oChangeName)==true){
				Xname = xChangeField.getText();
				xname.setText(Xname + " wins: " + Xwin);
			}
			else if (event.getSource().equals(xChangeName)==true){
				Oname = oChangeField.getText();
				oname.setText(Oname + " wins: " + Owin);
			}
		}
		
	}

}
