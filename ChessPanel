import java.awt.Color;
import java.awt.Graphics;

import javax.swing.JPanel;

public class ChessPanel extends JPanel{
	private static final long serialVersionUID = 1L;
	boolean[][] cells;
	boolean origMove[][];
	
	double width;
	double height;

	
	public ChessPanel(boolean[][] highlight) {
		
		cells = highlight;
	}


	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		width = ((double) this.getWidth() / cells[0].length);
		height = ((double ) this.getHeight() / cells.length);

		
	

		//creates and sets color of grid

	
			for (int j = 0; j<800;j+=200) {
				for (int i = 0; i<800;i+=200) {
					g.setColor(Color.getHSBColor(36, 91, 24));
					g.drawRect(i, j, 100, 100);
					g.fillRect(i, j, 100, 100);
				}
		
			}
			for (int j = 100; j<800;j+=200) {
				for (int i = 100; i<800;i+=200) {
					g.setColor(Color.);
					g.drawRect(i, j, 100, 100);
					g.fillRect(i, j, 100, 100);
				}
		
			}
	

			//colors the selected square
			
			g.setColor(Color.BLUE);
			for (int row = 0; row < cells.length; row++) {
				for(int column = 0; column < cells[0].length; column++){
					
					
					
					if (cells[row][column]==true) {
						for(int i =0;i<8;i++) {
							for(int j  =0;j<8;j++) {
								cells[i][j]=false;
							}
							
					}
						
						g.setColor(Color.BLUE);
						g.fillRect((int)Math.round(column*width),
								(int)Math.round(row*height),
								(int)width,
								(int)height);
				
						for (int i = 0; i < 100000; i=i+100) {
							g.setColor(Color.ORANGE);
							g.fillRect((int)Math.round(column*width+i),
									(int)Math.round(row*height+i),
									(int)width,
									(int)height);
							g.setColor(Color.BLUE);
							g.setColor(Color.ORANGE);
							g.fillRect((int)Math.round(column*width-i),
									(int)Math.round(row*height-i),
									(int)width,
									(int)height);
							g.setColor(Color.BLUE);
							g.setColor(Color.ORANGE);
							g.fillRect((int)Math.round(column*width+i),
									(int)Math.round(row*height-i),
									(int)width,
									(int)height);
							g.setColor(Color.BLUE);
							g.setColor(Color.ORANGE);
							g.fillRect((int)Math.round(column*width-i),
									(int)Math.round(row*height+i),
									(int)width,
									(int)height);
						}
						g.setColor(Color.BLUE);
						
						g.fillRect((int)Math.round(column*width),
								(int)Math.round(row*height),
								(int)width,
								(int)height);
				
					}
						
					
					
				}

				}
			}
		

	public void setMove(boolean[][] nextMove) {
		
		cells = nextMove;
}

}
