package test;

import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

public class TesT {
	Scanner consoleInput = new Scanner(System.in);
	String input;
	Scanner fileInput;
	int[] inputArray;
	long startTime;
	
	public TesT() {
		System.out.println("Enter a number for which input file:");
		System.out.println("1. input1 2. input2 3. input3 4. input4");
				input = consoleInput.nextLine();
		if (input.length() !=1 && input.charAt(0) != '1' && input.charAt(0) != '2' && input.charAt(0) != '3' && input.charAt(0) != '4') {
			System.out.println("Enter 1 to 4");
			while (input.length() != 1 && input.charAt(0) != '1' && input.charAt(0) != '2' && input.charAt(0) != '3' && input.charAt(0) != '4' && input.charAt(0) != '5') {
				input = consoleInput.nextLine();
			}
		}
		try {
			fileInput = new Scanner(new File("input" + input.charAt(0) + ".txt"));
	} catch(FileNotFoundException ex) 
		{ex.printStackTrace();
		System.exit(0);
	}
		String infile = fileInput.nextLine();
		String[] inputStringArray = infile.split(",");
		inputArray = new int[inputStringArray.length];
		for (int i = 0; i < inputStringArray.length; i++) {
				inputArray[i] = Integer.parseInt(inputStringArray[i]);
				System.out.println(inputArray[i]);
		}
		System.out.println("Enter the number for which sort");
		System.out.println("1. Bubble 2. Selection 3. Table");
		input = consoleInput.nextLine();
		if (input.length( )!= 1 && input.charAt(0) != '1' && input.charAt(0) != '2' && input.charAt(0) != '3' ) {
			System.out.println("Enter 1, 2, or 3");
			while(input.length() != 1 && input.charAt(0) != '1' && input.charAt(0) != '2' && input.charAt(0) != '3') {
				input = consoleInput.nextLine();
			}
		}
		startTime = System.currentTimeMillis();
		if (input.equals("1")) {
			inputArray = bubbleSort(inputArray);
		}
		if (input.equals("2")) {
			inputArray = selectionSort(inputArray);
		}
		if (input.equals("3")) {
			inputArray = tableSort(inputArray);
		}
		long totalTime = System.currentTimeMillis() - startTime;
		for (int i = 0; i < inputArray.length; i++) {
			System.out.println(inputArray[i]);
		}
		System.out.println("Total time:" + totalTime);
		PrintWriter pw;
		
		try {
			pw = new PrintWriter( new FileWriter(new File("output.txt")));
			String output = "";
			for (int i =0; i< inputArray.length; i++) {
				output += inputArray[i] + ",";
			}
			output += "\nTotal Time:" + totalTime;
			pw.write(output);;
			pw.close();
		} catch (IOException ex) {
			ex.printStackTrace();
			System.exit(0);
		}
		
		}
	
//Compares pairs of numbers, and putting the larger ones to the right and smaller to the left
	int[] bubbleSort(int[] array) {
		for (int j = 0; j < array.length; j++) {
			for (int i = 0; i < array.length-1; i++) {
				if (array[i] > array [i+1]) {
					
					int temp = array[i];
					array[i] = array[i+1];
					array[i+1] = temp;
				}
			}
		}
		return array;
	}
	
	int[] selectionSort(int [] array) {
		for (int j = 0; j < array.length; j++) {
			int smallestNumber = array[j];
			int smallestIndex = j;
			for (int i = j; i < array.length; i++) {
			
					if(array[i] < smallestNumber) {
						smallestNumber = array[i];
						smallestIndex = i;
					}
			}
				int temp = array[smallestIndex];
				array[smallestIndex] = array[j];
				array[j] = temp;
		}
		return array;
		}
	
	int[] tableSort(int[] array) {
		int[] tally = new int[1001];
		for (int i = 0; i < array.length; i++) {
			tally[array[i]]++;
		} 
		int count = 0;
		
		for (int i = 0; i < tally.length; i++) {
			
			for (int j = 0; j < tally[i]; j++) {
				array[count] = i;
				count++;
				
			}
		}
		
		return array;
		
	}


	public static void main(String[] args) {
		new TesT();
		


	}

}
