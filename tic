

import java.util.Scanner;


public class TicTacToe {
	
	int[][] board = new int [3][3];
	final int XTURN = 0;
	final int OTURN = 1;
	final int BLANK = 0;
	final int XMOVE = 1;
	final int OMOVE = 2;
	int Xwin = 0;
	int Owin = 0;
	int turn = XTURN;
	Scanner scanner;
	String input = "";
	boolean playing = true;
	
	public TicTacToe() {

		scanner = new Scanner(System.in);
		clearBoard();
		
		while(playing == true && checkWin(XMOVE) == false && checkWin(OMOVE) == false && checkTie()== false){
		printBoard();
		if (turn == XMOVE)
		    System.out.println("Enter your move (O turn): ");
		else {
			System.out.println("Enter your move (X turn): ");
		}
		input = scanner.nextLine();
		if (input.length() !=2){
			System.out.println("Please enter the coordinates (letter + number)");
		}
		else if (input.charAt(0) != 'a'
				&& input.charAt(0) != 'b'
				&& input.charAt(0) != 'c'){
			System.out.println("eligible rows are a,b, and c");
		}
		else if (input.charAt(1) != '1'
				&& input.charAt(1) != '2'
				&& input.charAt(1) != '3'){
			System.out.println("eligible columns are 1,2, and 3");
		}
		else {
			int row = input.charAt(0) - 'a';
			int column = input.charAt(1) - '1';
			if (board[row][column] == BLANK){
				if(turn == XTURN){
					board[row][column]=XMOVE;
					turn = OTURN;
				}
				else {
					board[row][column] = OMOVE;
					turn = XTURN;
				}
			}
		}
		
		if (checkWin(XMOVE) == true){
			printBoard();
			Xwin += 1;
			System.out.println("X WINS, X HAS WON " + Xwin + " TIMES AND O HAS WON " + Owin + " TIMES");
			System.out.println("Play again?");
			reTry();
			}
			
		else if (checkWin(OMOVE)==true){
			printBoard();
			Owin += 1;
			System.out.println("O WINS, X HAS WON " + Xwin + " TIMES AND O HAS WON " + Owin + " TIMES");
			System.out.println("Play again?");
			reTry();
			
			{
				
			}
		}
		else if (checkTie()==true){
			printBoard();
			System.out.println("Its a tie!");
			System.out.println("X HAS WON " + Xwin + " TIMES AND O HAS WON " + Owin + " TIMES");
			System.out.println("Play again?");
			reTry();
		}
		else {
	
		}
		}
		}

// check if there is a win, the thisMove input can be XMOVE or OMOVE	
	boolean checkWin(int thisMove){
		
		// check each row
		for (int row=0; row<=2; row++)
		{
			if (board[row][0] ==thisMove && board[row][1]==thisMove && board[row][2]==thisMove) {
				return true;
			}
		}
		
		// check each column
		for (int col=0; col<=2; col++)
		{
			if (board[0][col] ==thisMove && board[1][col]==thisMove && board[2][col]==thisMove) {
				return true;
			}
		}
		
		//check diagonal
		if (board[0][0] == thisMove && board[1][1]==thisMove && board [2][2]==thisMove){
			return true;
		}
		if (board[2][0] == thisMove && board[1][1]==thisMove && board [0][2]==thisMove){
			return true;
		}
		return false;
	}
	
	public boolean checkTie(){
		for(int row = 0; row < board.length; row++){
			for (int column = 0; column < board [0].length; column ++)
			{
				if (board[row][column]== BLANK) {
					return false;
				}
			}
	}
		return true;
	}
	public void reTry() {
		String YorN = scanner.nextLine();
		if (YorN.equals("yes")|| YorN.equals ("y")){
			System.out.println("Restarting...");
			turn = XTURN;
			clearBoard();


		}
		else if(YorN.equals ("no") || YorN == "n"){
			playing = false;
			System.out.println("Program Finished");
			}
		else {
			reTry();
		}
	}
	
	public void printBoard() {
		System.out.println(" \t1\t2\t3");
		for(int row = 0; row < board.length; row++){
			String output = (char)('a' + row) + "\t";
			for (int column = 0; column < board[0].length; column++){
				if (board[row][column] == BLANK){
					output += " \t";
				}
				else if (board[row][column] == XMOVE){
					output += "X\t";
				}
				else if (board[row][column] == OMOVE){
					output += "O\t";
				}
				
				
			}
			System.out.println(output);
		}
		
		}
	
	public void clearBoard() {
		for (int row=0; row<=2; row++)
			for (int col=0; col<=2; col++)
				board[row][col] = BLANK;
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new TicTacToe();
		
	}

}
